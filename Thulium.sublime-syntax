%YAML 1.2
---

name: Thulium Music

file_extensions:
  - tm
  - tml

scope: source.Thulium

contexts:

  main:
    - include: comment  # 注释
    - include: command  # 命令
    - include: track    # 音轨

  comment:
    # 行注释，使用双斜杠声明
    - match: ^//
      scope: comment.line.Thulium
      push:
        - meta_scope: meta.comment.Thulium
        - match: (-{3,})(?=.+-{3,}$)
          scope: comment.line.Thulium
          push: 
            - match: -{3,}$
              scope: comment.line.Thulium
              pop: true
            - match: .+(?!-|$)
              scope: entity.other.inherited-class section.name.Thulium
        - match: \S+
          scope: comment.line.Thulium
      with_prototype: 
        - match: $
          pop: true

  command:
    # 内置命令，使用井号声明
    - match: ^#
      scope: keyword.operator.Thulium
      push:
        - meta_scope: meta.command.Thulium
        - match: '[Ee]nd'
          scope: keyword.declaration.Thulium
        - match: '[Ii]nclude'
          scope: keyword.declaration.Thulium
          push:
            - meta_scope: meta.include.Thulium
            - match: $
              pop: true
            - include: library.include
        - match: '[Cc]hord'
          scope: keyword.command.Thulium
          push:
            - meta_scope: meta.chord.Thulium
            - match: ^#
              scope: keyword.operator.Thulium
              pop: true
            - include: library.chord
        - match: '[Ff]unction'
          scope: keyword.command.Thulium
          push: JavaScript.sublime-syntax
          with_prototype:
            - match: ^#
              scope: keyword.operator.Thulium
              pop: true
        - match: '[Ss]ettings'
          scope: keyword.command.Thulium
          push: library.settings
          with_prototype:
            - match: ^#
              scope: keyword.operator.Thulium
              pop: true
        - match: '\S+(?=[ \t])'
          scope: invalid.command.Thulium
        - match: $
          pop: true

  library.include:
    - match: '[a-zA-Z]\w*'
      scope: string.unquoted package.name.Thulium
    - match: \"
      scope: string.quoted.single.Thulium
      push: tmPath.sublime-syntax
      with_prototype:
        - match: \"
          scope: string.quoted.single.Thulium
          pop: true

  library.chord:
    - match: ^[a-zA-Z](?=[\n\t])
      scope: variable.function library.chord.operator.Thulium
      push: 
        - match: \t+([^\t]+\t+)?
          scope: comment.line.Thulium
        - match: \[
          scope: constant.language library.chord.bracket.Thulium
          push:
            - match: ($|\])
              scope: constant.language library.chord.bracket.Thulium
              pop: true
            - match: '[+\-]?\d'
              scope: variable.function library.chord.index.Thulium
            - match: ':'
              scope: constant.language library.chord.bracket.Thulium
        - match: '[+\-]?\d'
          scope: variable.function library.chord.index.Thulium
        - match: ','
          scope: constant.language library.chord.bracket.Thulium
        - match: $
          pop: true
    - match: ^[^#\n\t].*
      scope: invalid.library.Thulium
  
  library.settings:
    - meta_scope: meta.settings.Thulium
    - match: '^[ -]*[a-zA-Z]\w*'
      scope: storage.type.Thulium
      push: 
        - meta_scope: meta.value.settings.Thulium
        - match: $
          pop: true
        - match: '[a-zA-Z]\w*'
          scope: string.unquoted.Thulium
        - match: (\d|[Aa]utomatic|[Tt]rue|[Ff]alse)
          scope: constant.language.Thulium

  track:
    # bracket: 尖括号
    # name: 音轨名
    # instrument: 乐器声明
    - match: <:?(?=[a-zA-Z\s])
      scope: bracket.track.Thulium
      push: track.meta
    - match: :?>
      scope: bracket.track.Thulium
      pop: true
    - match: (?=.)
      push: track-general.sublime-syntax
      with_prototype:
        - match: $\s*^
          pop: true

  track.meta:
    - meta_scope: meta.track.Thulium
    - match: (?=:?>)
      scope: bracket.track.Thulium
      pop: true
    - match: '(:)?([a-zA-Z]\w*)(:)'
      captures:
        1: bracket.track.Thulium
        2: name.track.Thulium
        3: bracket.track.Thulium
    - match: ','
      scope: bracket.track

    - match: '[a-zA-Z]\w*'
      scope: instrument.track.Thulium
      push: 
        - match: (?=[,>])
          pop: true
        - include: track-general.sublime-syntax

